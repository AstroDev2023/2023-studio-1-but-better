name: Build & Test

on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - main

jobs:
  run_unit_tests:
    name: Unit Tests
    runs-on: ubuntu-latest # Running on this OS, if we need it changed lmk
    steps:

      - uses: actions/checkout@v3 # Checkout repo to remote machine
      - name: Set up OpenJDK17
        uses: actions/setup-java@v1
        with:
          java-version: '17'

      - name: Cache Gradle packages # Allows us to reuse packages between runs
        uses: actions/cache@v2 # If the files specified in key change we dump old cache else re-use
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Run Unit Tests
        id: tests # Unique ID to reference later to color our message
        run: |
          cd $GRADLE_DIR
          chmod +x ./gradlew
          ./gradlew --stacktrace test
        env:
          GRADLE_DIR: 'source' # Modify this to wherever './gradlew' is

      - name: Test Success
        uses: rjstone/discord-webhook-notify@v1
        if: ${{ success() && github.event_name == 'pull_request'}}
        with:
          severity: info
          username: ${{ github.event.sender.login }}
          avatarUrl: ${{ github.event.sender.avatar_url }}
          description: Tests Succeeded!
          details:
            "on [${{ github.event.pull_request.title }}](${{ github.event.pull_request.html_url }})"
          footer:
            "${{ github.event.pull_request.base.ref }} <- ${{ github.event.pull_request.head.ref }}"
          webhookUrl: ${{ secrets.DISCORD_WEBHOOK }}

      - name: Test Failure
        uses: rjstone/discord-webhook-notify@v1
        if: ${{ failure() && github.event_name == 'pull_request'}}
        with:
          severity: error
          username: ${{ github.event.sender.login }}
          avatarUrl: ${{ github.event.sender.avatar_url }}
          description: Tests Failed!
          details:
            "on [${{ github.event.pull_request.title }}](${{ github.event.pull_request.html_url }})"
          footer:
            "${{ github.event.pull_request.base.ref }} <- ${{ github.event.pull_request.head.ref }}"
          webhookUrl: ${{ secrets.DISCORD_WEBHOOK }}
      - name: Test Success
        uses: rjstone/discord-webhook-notify@v1
        if: ${{ success() && github.event_name != 'pull_request'}}
        with:
          severity: info
          username: ${{ github.event.sender.login }}
          avatarUrl: ${{ github.event.sender.avatar_url }}
          description: Tests Succeeded!
          details:
            "on ${{ github.ref_name }}"
          footer:
            "${{ github.ref_name }}"
          webhookUrl: ${{ secrets.DISCORD_WEBHOOK }}

      - name: Test Failure
        uses: rjstone/discord-webhook-notify@v1
        if: ${{ failure() && github.event_name != 'pull_request'}}
        with:
          severity: error
          username: ${{ github.event.sender.login }}
          avatarUrl: ${{ github.event.sender.avatar_url }}
          description: Tests Failed!
          details:
            "on ${{ github.ref_name }}"
          footer:
            "${{ github.ref_name }}"
          webhookUrl: ${{ secrets.DISCORD_WEBHOOK }}

      - name: Cleanup Gradle Cache
        if: always()
        # Remove some files from the Gradle cache, so they aren't cached by GitHub Actions.
        # Restoring these files from a GitHub Actions cache might cause problems for future builds.
        run: |
          rm -f ~/.gradle/caches/modules-2/modules-2.lock
          rm -f ~/.gradle/caches/modules-2/gc.properties
  sonarcloud:
    name: SonarCloud Analysis
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2 # Checkout repo to remote machine
      - name: Set up OpenJDK17 # Need to change to JDK17
        uses: actions/setup-java@v1
        with:
          java-version: '17'

      # SonarCloud Integration
      - name: Cache SonarCloud packages
        uses: actions/cache@v1
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache Gradle packages
        uses: actions/cache@v1
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle

      - name: Build and Analyse Game
        run: |
          cd $GRADLE_DIR
          chmod +x ./gradlew
          ./gradlew --stacktrace build -x test sonarqube --info
          ls -al
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          GRADLE_DIR: 'source' # Modify this to wherever './gradlew' is
